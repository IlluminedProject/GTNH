options.button.shader=셰이더...

options.chunks=%s 청크
options.entityShadows=엔티티 그림자
sodium.option_impact.low=낮음
sodium.option_impact.medium=중간
sodium.option_impact.high=높음
sodium.option_impact.extreme=극한
sodium.option_impact.varies=다양함
sodium.options.pages.quality=퀄리티
sodium.options.pages.performance=성능
sodium.options.pages.advanced=고급
sodium.options.view_distance.tooltip=렌더링 거리는 지형이 렌더링되는 거리를 제어합니다. 거리가 짧을수록 렌더링되는 지형이 적어지고 프레임 속도가 향상됩니다.
sodium.options.simulation_distance.tooltip=시뮬레이션 거리는 지형과 개체가 로드되고 틱되는 거리를 제어합니다. 거리가 짧을수록 내부 서버의 로드가 줄어들고 프레임 속도가 향상될 수 있습니다.
sodium.options.brightness.tooltip=게임의 밝기(감마)를 제어합니다.
sodium.options.clouds.name=구름
sodium.options.clouds.tooltip=구름의 표시 여부를 제어합니다.
sodium.options.gui_scale.tooltip=사용자 인터페이스에 사용할 최대 배율을 설정합니다. '자동'을 사용하면 항상 가장 큰 배율이 사용됩니다.
sodium.options.fullscreen.tooltip=활성화하면 게임이 전체 화면으로 표시됩니다(지원되는 경우).
sodium.options.v_sync.tooltip=활성화하면 게임의 프레임 속도가 모니터의 새로 고침 빈도와 동기화되어 전체 입력 대기 시간을 희생하면서 일반적으로 더 부드러운 경험을 제공합니다. 시스템이 너무 느린 경우 이 설정으로 인해 성능이 저하될 수 있습니다.입
sodium.options.fps_limit.tooltip=초당 최대 프레임 수를 제한합니다. 이는 멀티 태스킹 시 배터리 사용량과 일반적인 시스템 부하를 줄이는 데 도움이 될 수 있습니다. V-Sync가 활성화된 경우 이 옵션은 디스플레이의 새로 고침 빈도보다 낮지 않는 한 무시됩니다.
sodium.options.view_bobbing.tooltip=활성화하면 플레이어의 시야가 움직일 때 흔들리게 됩니다. 플레이하는 동안 멀미를 경험하는 플레이어는 이 기능을 비활성화하면 도움이 될 수 있습니다.
sodium.options.attack_indicator.tooltip=공격 표시기가 화면에 표시되는 위치를 제어합니다.
sodium.options.autosave_indicator.tooltip=활성화하면 게임이 월드를 저장할 때 표시기가 표시됩니다.
sodium.options.graphics_quality.tooltip=The default graphics quality controls some legacy options and is necessary for mod compatibility. If the options below are left to "Default they will use this setting.
sodium.options.clouds_quality.tooltip=Controls the quality of rendered clouds in the sky.
sodium.options.weather_quality.tooltip=Controls the quality of rain and snow effects.
sodium.options.leaves_quality.name=Leaves Quality
sodium.options.leaves_quality.tooltip=Controls the quality of leaves.
sodium.options.grass_quality.name=Grass Quality
sodium.options.grass_quality.tooltip=Controls the quality of grass block sides.
sodium.options.particle_quality.name=Particle Quality
sodium.options.particle_quality.tooltip=Controls the maximum number of particles which can be present on screen at any one time.
sodium.options.smooth_lighting.tooltip=Controls whether blocks will be smoothly lit and shaded. This slightly increases the amount of time needed to re-build a chunk, but doesn't affect frame rates.
sodium.options.biome_blend.value=%s block(s)
sodium.options.biome_blend.tooltip=Controls the range which biomes will be sampled for block colorization. Higher values greatly increase the amount of time it takes to build chunks for diminishing improvements in quality.
sodium.options.entity_distance.tooltip=Controls how far away entities can render from the player. Higher values increase the render distance at the expense of frame rates.
sodium.options.entity_shadows.tooltip=If enabled, basic shadows will be rendered beneath mobs and other entities.
sodium.options.vignette.name=Vignette
sodium.options.vignette.tooltip=If enabled, a vignette effect will be rendered on the player's view. This is very unlikely to make a difference to frame rates unless you are fill-rate limited.
sodium.options.mipmap_levels.tooltip=Controls the number of mipmaps which will be used for block model textures. Higher values provide better rendering of blocks in the distance, but may adversely affect performance with many animated textures.
sodium.options.use_chunk_multidraw.name=Chunk Multi-Draw
sodium.options.use_chunk_multidraw.tooltip=Multi-draw allows multiple chunks to be rendered with fewer draw calls, greatly reducing CPU overhead when rendering the world while also potentially allowing for more efficient GPU utilization. This optimization may cause issues with some graphics drivers, so you should try disabling it if you are experiencing glitches.
sodium.options.use_vertex_objects.name=Vertex Array Objects
sodium.options.use_vertex_objects.tooltip=Helps to improve performance by moving information about how vertex data should be rendered into the driver, allowing it to better optimize for repeated rendering of the same objects. There is generally no reason to disable this unless you're using incompatible mods.
sodium.options.use_block_face_culling.name=Block Face Culling
sodium.options.use_block_face_culling.tooltip=If enabled, only the sides of blocks which are facing the camera will be submitted for rendering. This can eliminate a large number of block faces very early in the rendering process, saving memory bandwidth and time on the GPU. Some resource packs may have issues with this option, so try disabling it if you're seeing holes in blocks.
sodium.options.use_compact_vertex_format.name=Compact Vertex Format
sodium.options.use_compact_vertex_format.tooltip=If enabled, a more compact vertex format will be used for rendering chunks. This can reduce graphics memory usage and bandwidth requirements significantly, especially for integrated graphics cards, but can cause z-fighting with some resource packs due to how it reduces the precision of position and texture coordinate attributes.
sodium.options.use_fog_occlusion.name=Fog Occlusion
sodium.options.use_fog_occlusion.tooltip=If enabled, chunks which are determined to be fully hidden by fog effects will not be rendered, helping to improve performance. The improvement can be more dramatic when fog effects are heavier (such as while underwater), but it may cause undesirable visual artifacts between the sky and fog in some scenarios.
sodium.options.use_entity_culling.name=Entity Culling
sodium.options.use_entity_culling.tooltip=If enabled, entities determined not to be in any visible chunks will be skipped during rendering. This can help improve performance by avoiding the rendering of entities located underground or behind walls.
sodium.options.use_particle_culling.name=Particle Culling
sodium.options.use_particle_culling.tooltip=If enabled, only particles which are determined to be visible will be rendered. This can provide a significant improvement to frame rates when many particles are nearby.
sodium.options.animate_only_visible_textures.name=Animate Only Visible Textures
sodium.options.animate_only_visible_textures.tooltip=If enabled, only animated textures determined to be visible will be updated. This can provide a significant boost to frame rates on some hardware, especially with heavier resource packs. If you experience issues with some textures not being animated, try disabling this option.
sodium.options.translucency_sorting.name=Translucency Sorting
sodium.options.translucency_sorting.tooltip=If enabled, translucent blocks will be sorted correctly from back to front to provide better rendering, especially when multiple translucent blocks are in view and layered.  This is a bit of an expensive operation.
sodium.options.cpu_render_ahead_limit.name=CPU Render-Ahead Limit
sodium.options.cpu_render_ahead_limit.tooltip=Specifies the maximum number of frames the CPU can be waiting on the GPU to finish rendering. Very low or high values may create frame rate instability.
sodium.options.cpu_render_ahead_limit.value=%s frame(s)
sodium.options.allow_direct_memory_access.name=Allow Direct Memory Access
sodium.options.allow_direct_memory_access.tooltip=If enabled, some critical code paths will be allowed to use direct memory access for performance. This often greatly reduces CPU overhead for chunk and entity rendering, but can make it harder to diagnose some bugs and crashes. You should only disable this if you've been asked to or otherwise know what you're doing.
sodium.options.ignore_driver_blacklist.name=Ignore Driver Blacklist
sodium.options.ignore_driver_blacklist.tooltip=If enabled, known incompatibilities with your hardware/driver configuration will be ignored, allowing you to enable options that may cause issues with your game. You should generally not touch this option unless you know exactly what you are doing. After changing this option, you must save, close, and then re-open the settings screen.
sodium.options.enable_memory_tracing.name=Enable Memory Tracing
sodium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
sodium.options.performance_impact_string=Performance Impact: %s
sodium.options.use_persistent_mapping.name=Persistent Mapping
sodium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
sodium.options.chunk_memory_allocator.name=Chunk Memory Allocator
sodium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
sodium.options.chunk_memory_allocator.async=Async
sodium.options.chunk_memory_allocator.swap=Swap
sodium.options.chunk_update_threads.name=Chunk Update Threads
sodium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
sodium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
sodium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
sodium.options.use_no_error_context.name=No Error Context
sodium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
sodium.options.use_gl_state_cache.name=GL State Cache
sodium.options.use_gl_state_cache.tooltip=If enabled, the OpenGL state cache will be used to reduce the number of redundant state changes. This can improve performance, but it may also cause issues with some mods.  Does not persist across game restarts.
sodium.options.threads.value=%s thread(s)
sodium.options.default=Default
sodium.options.buttons.undo=Undo
sodium.options.buttons.apply=Apply
sodium.options.buttons.donate=Buy coffee for JellySquid!
options.dynamic_fov=Dynamic FOV
options.dynamic_fov.tooltip=If enabled, the game's field of view will change based on the player's speed.
options.framerate=%s FPS
iris.shaders.toggled=Toggled shaders to %s!
iris.shaders.disabled=Shaders disabled!
options.iris.apply=Apply
options.iris.refresh=Refresh
options.iris.openShaderPackFolder=Open Shader Pack Folder...
options.iris.shaderPackSettings=Shader Pack Settings...
options.iris.shaderPackList=Shader Pack List...
options.iris.refreshShaderPacks=Refresh Shader Packs
options.iris.shaderPackSelection=Shader Packs...
options.iris.shaderPackSelection.title=Shader Packs
options.iris.shaderPackSelection.addedPack=Added Shader Pack "%s"
options.iris.shaderPackSelection.addedPacks=Added %s Shader Packs
options.iris.shaderPackSelection.failedAdd=Files were not valid Shader Packs
options.iris.shaderPackSelection.failedAddSingle="%s" is not a valid Shader Pack
options.iris.shaderPackSelection.copyError=Could not add Shader Pack "%s"
options.iris.shaderPackSelection.copyErrorAlreadyExists="%s" is already in your Shader Packs folder!
options.iris.shaderPackOptions.tooManyFiles=Cannot import multiple Shader Settings files!
options.iris.shaderPackOptions.failedImport=Failed to import Shader Settings file "%s"
options.iris.shaderPackOptions.importedSettings=Imported Shader Settings from "%s"
options.iris.shaders.disabled=Shaders: Disabled
options.iris.shaders.enabled=Shaders: Enabled
options.iris.shaders.nonePresent=Shaders: No Packs Present
options.iris.back=Back
options.iris.reset=Reset
options.iris.reset.tooltip=Reset ALL options and apply?
options.iris.reset.tooltip.holdShift=Hold SHIFT and click to reset
options.iris.importSettings.tooltip=Import settings from file
options.iris.exportSettings.tooltip=Export applied settings to file
options.iris.mustDisableFullscreen=Please disable fullscreen first!
options.iris.setToDefault=Set option to default value?
options.iris.profile=Profile
options.iris.profile.custom=Custom
options.iris.shadowDistance=Max Shadow Distance
options.iris.shadowDistance.enabled=Allows you to change the maximum distance for shadows. Terrain and entities beyond this distance will not cast shadows. Lowering the shadow distance can significantly increase performance.
options.iris.shadowDistance.disabled=Your current shader pack has already set a render distance for shadows; you cannot change it.
options.iris.gui.hide=Hide GUI
options.iris.gui.show=Show GUI
pack.iris.select.title=Select
pack.iris.configure.title=Configure
label.iris.true=On
label.iris.false=Off